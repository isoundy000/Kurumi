$#include "gamecore/SpeedController.h"


class SpeedController
{
public:

	SpeedController();

	~SpeedController();

	void setLuaUpdateCall(LuaFunction luaCall);
	inline void clearLuaUpdateCall();

	inline void setTarget(cc.Node* target);
	inline cc.Node* getTarget();

	inline void setStopUpdate(bool isStop);

	inline bool isStopUpdate();

	// 重力设置
	inline void setGravity(float x, float y);
	inline float getGravityX();
	inline float getGravityY();
	// 是否启用重力
	inline void setGravityEnable(bool enable);
	inline bool isGravityEnable();

	// 力设置
	inline void setForce(float x, float y);
	inline float getForceX();
	inline float getForceY();
	// 是否启用力
	inline void setForceEnable(bool enable);
	inline bool isForceEnable();

	// 摩擦力设置
	inline void setFriction(float friction);
	inline float getFriction();
	// 是否启用摩擦力
	inline void setFrictionEnable(bool enable);
	inline bool isFrictionEnable();

	// 设置最大值
	inline void setMaxValue(float x, float y);
	inline float getMaxValueX();
	inline float getMaxValueY();
	// 是否启用最大值
	inline void setMaxValueEnable(bool enable);
	inline bool isMaxValueEnable();

	// 设置最小值
	inline void setMinValue(float x, float y);
	inline float getMinValueX();
	inline float getMinValueY();
	// 是否启用最大值
	inline void setMinValueEnable(bool enable);
	inline bool isMinValueEnable();

	inline float getAppendX();
	inline float getAppendY();
	
	// 设置当前是否为正方向，如果是则该方向的值为正值
	// 1正 -1负 0忽略
	void setGravityPositive(int x, int y);
	void setForcePositive(int x, int y);
};
